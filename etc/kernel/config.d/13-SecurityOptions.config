## by F.C.
## Last edit: 09/03/2025 (kernel 6.12)

## Building this as module is required to enable TRUSTED_KEYS_TEE.
CONFIG_TRUSTED_KEYS=m

## Enforces restrictions on unprivileged users reading the kernel
## syslog via dmesg(8). If not selected, no restrictions will be
## enforced unless "dmesg_restrict" sysctl is explicitly set to 1.
CONFIG_SECURITY_DMESG_RESTRICT=y

## Disable Intel Trusted Execution Technology (Intel TXT).
## Old, not recommended, incompatible with UEFI Secure Boot.
## See https://www.suse.com/support/kb/doc/?id=000019785
## See https://wiki.gentoo.org/wiki/Trusted_Boot
# CONFIG_INTEL_TXT is not set

## Portion of low virtual memory which should be protected
## from userspace allocation (value for x86, ia64, ppc64).
CONFIG_LSM_MMAP_MIN_ADDR=65536

## Enable the Simplified Mandatory Access Control Kernel.
## SMACK is useful for sensitivity, integrity, and a variety
## of other mandatory security schemes.
CONFIG_SECURITY_SMACK=y
CONFIG_SECURITY_SMACK_BRINGUP=y
CONFIG_SECURITY_SMACK_NETFILTER=y
CONFIG_SECURITY_SMACK_APPEND_SIGNALS=y

## Enable TOMOYO Linux, pathname-based access control.
## Note: this host uses the new "merged-usr" layout that
## is mandatory for sys-apps/systemd >= 255 (init system).
CONFIG_SECURITY_TOMOYO=y
CONFIG_SECURITY_TOMOYO_POLICY_LOADER="/usr/bin/tomoyo-init"
CONFIG_SECURITY_TOMOYO_ACTIVATION_TRIGGER="/usr/lib/systemd/systemd"

## Ensure LoadPin is disabled. When this option is enabled,
## any files read through the kernel file reading interface
## (kernel modules, firmware, kexec images, security policy)
## are pinned to the first filesystem used for loading. This
## should be used only on systems WITHOUT an initrd. See:
## https://forums.gentoo.org/viewtopic-p-8687128.html
# CONFIG_SECURITY_LOADPIN is not set

## Build support for an LSM that enforces a coarse kernel lockdown
## behaviour (enable on CachyOS / TKG / Debian / MX Linux kernels),
## but do not enable the lockdown LSM early in boot (otherwise it
## will unconditionally be called before any other LSMs, see the
## related kernel help and the config option CONFIG_LSM below).
CONFIG_SECURITY_LOCKDOWN_LSM=y
# CONFIG_SECURITY_LOCKDOWN_LSM_EARLY is not set

## Enables digital signature verification support using multiple
## keyrings (defines separate keyrings for each of the different
## use cases: EVM, IMA, and modules). Different keyrings improves
## search performance, but also allow to "lock" certain keyring
## to prevent adding new keys. This is useful for EVM and module
## keyrings, when keys are usually only added from initramfs.
CONFIG_INTEGRITY_SIGNATURE=y
# CONFIG_INTEGRITY_CA_MACHINE_KEYRING is not set

## Disable the Integrity Measurement Architecture as suggested by
## https://wiki.gentoo.org/wiki/Integrity_Measurement_Architecture
## (note that IMA is also disabled in CachyOS / TKG kernels).
# CONFIG_IMA is not set

## Disable the Extended Verification Module as suggested by
## https://wiki.gentoo.org/wiki/Extended_Verification_Module
## (note that EVM is also disabled in CachyOS / TKG kernels).
# CONFIG_EVM is not set

## A comma-separated list of Linux Security Modules (LSMs) in
## initialization order. Any LSM left off this list will be
## ignored. This can be overridden with the "lsm=" parameter.
## CONFIG_LSM="landlock,lockdown,yama,integrity,apparmor,bpf"
## The following LSM list (together with most of above security
## settings) is from CachyOS / TKG kernel (the best kernels for
## desktops / gaming). Also landlock is required by userspace.
CONFIG_LSM="landlock,lockdown,yama,integrity,bpf"

## All page allocator and slab allocator memory will be zeroed when
## allocated, eliminating many kinds of "uninitialized heap memory"
## flaws, especially heap content exposures. The performance impact
## is in most cases < 1%. Can be disabled with "init_on_alloc=0".
CONFIG_INIT_ON_ALLOC_DEFAULT_ON=y

## Trigger a BUG when data corruption is detected in kernel memory
## structures, when they get checked for validity (some are anyway).
## When this option is enabled, the kernel will print out the contents
## of the registers and a stack trace, then it will kill the offending
## thread (instead of letting the system run with known corruption). See
## https://lkw.readthedocs.io/en/latest/doc/06_kernel_bug_reporting.html
## and https://kernelnewbies.org/FAQ/BUG (recommended for security).
CONFIG_BUG_ON_DATA_CORRUPTION=y
