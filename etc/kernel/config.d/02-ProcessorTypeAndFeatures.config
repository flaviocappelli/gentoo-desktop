## by F.C.
## Last edit: 16/04/2025 (kernel 6.12)

## Try to use Flexible Return and Event Delivery instead of the
## legacy SYSCALL/SYSENTER/IDT architecture for ring transitions
## and exception/interrupt handling if the system supports it.
CONFIG_X86_FRED=y

## Disable non-standard x86 platforms (a little minority
## of systems, the vast majority is standard PC platforms).
# CONFIG_X86_EXTENDED_PLATFORM is not set

## Disable statistics output and tuning options for XEN in debugfs
## (enabling this option may incur a significant performance overhead).
# CONFIG_XEN_DEBUG_FS is not set

## Disable fine granularity task steal time (enabling
## this option will incur a small performance impact).
# CONFIG_PARAVIRT_TIME_ACCOUNTING is not set

## Allows to run Linux as guest in a Jailhouse non-root cell.
CONFIG_JAILHOUSE_GUEST=y

## Allows the kernel to dinamically allocate and free bitmaps for
## CPU masks based on the number of CPU cores present at boot.
CONFIG_MAXSMP=y

## Disable support for deprecated /dev/mcelog character device.
# CONFIG_X86_MCELOG_LEGACY is not set

## Disable support for injecting machine checks
## (should be enabled only for testing purposes).
# CONFIG_X86_MCE_INJECT is not set

## Enable support for Model-Specific Registers (MSRs). Required by
## some applications like powertop. Also enable access to x86 CPUID.
CONFIG_X86_MSR=y
CONFIG_X86_CPUID=y

## Do not expose statistics about the Change Page Attribute mechanism.
# CONFIG_X86_CPA_STATISTICS is not set

## Disable the old method to read the AMD NUMA configuration directly
## from the builtin Northbridge of Opteron. It is recommended to use
## X86_64_ACPI_NUMA instead (which takes priority if both are built).
# CONFIG_AMD_NUMA is not set

## Enable by default the memory corruption check.
CONFIG_X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK=y

## Enable as module instead of built-in (like Arch).
CONFIG_PERF_EVENTS_AMD_UNCORE=m

## Set MTRR cleanup and spare reg num. This should avoid issues when the MTRR table is not setup correctly. See also
## https://community.amd.com/t5/processors/what-are-the-recommended-mtrr-settings-in-the-linux-kernel-for/td-p/149225
CONFIG_MTRR_SANITIZER_ENABLE_DEFAULT=1
CONFIG_MTRR_SANITIZER_SPARE_REG_NR_DEFAULT=0

## Enable TSX (Transactional Synchronization Extensions) on capable
## hardware that is believed to be safe against side channel attacks.
# CONFIG_X86_INTEL_TSX_MODE_OFF is not set
CONFIG_X86_INTEL_TSX_MODE_AUTO=y

## Configure kernel for low latency desktop.
# CONFIG_HZ_300 is not set
CONFIG_HZ_1000=y
CONFIG_HZ=1000

## Disable the vsyscall table: since glibc-2.14 it is no longer needed
## and is a potential source of vulnerability. If absolutely necessary,
## we can re-enable it with the kernel boot parameter 'vsyscall=xonly'.
# CONFIG_LEGACY_VSYSCALL_XONLY is not set
CONFIG_LEGACY_VSYSCALL_NONE=y

## Build kernel for 'x86-64-v3' architecture. Needs gcc >= 11.1, and
## patch "more-ISA-levels-and-uarches-for-kernel-6.1.79-6.8-rc3.patch"
## from 'https://github.com/graysky2/kernel_compiler_patch'. Note that
## such patch is valid for all kernels from 6.1.79 to 6.8-rc3. Also
## note that kernels 6.6 LTS will be supported until December 2026.
CONFIG_X86_64_VERSION=3
